(define (abs x)
  (if (< x 0) (- x) x))
(define (average x y)
  (/ (+ x y) 2))
(define (<= x y)
  (not (> x y)))
(define (>= x y)
  (not (< x y)))
(define (square x)
  (* x x))
(define (sum-of-square x y)
  (+ (square x) (square y)))
(define (sqrt x)
  (define (sqrt-iter guess)
    (define (next-guess)
      (average guess (/ x guess)))
    (define (good-enough)
      (< (abs (- guess (next-guess))) 0.00001))
    (if (good-enough) guess
	(sqrt-iter (next-guess))))
  (sqrt-iter 1.0))
(define (cube-root x)
  (define (cr-iter guess)
    (define (next-guess)
      (average guess (/ (+ (/ x (square guess)) (* 2 guess)) 3)))
    (define (good-enough)
      (< (abs (- guess (next-guess))) 0.0000001))
    (if (good-enough) guess
	(cr-iter (next-guess))))
  (cr-iter 1.0))